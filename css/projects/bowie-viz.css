.ratio-phi {
  position: relative; }
  .ratio-phi:before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: 168%; }
  .ratio-phi > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }

.ratio-square {
  position: relative; }
  .ratio-square:before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: 100%; }
  .ratio-square > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }

/**
 * Function defining the difference between 2 colors
 *
 * @param {Color} $a - first color
 * @param {Color} $b - second color
 *
 * @return {Map}  The color operations to do in order to find $b from $a where keys are the color functions to apply and values are the values to pass to these functions
 */
/**
 * Compute the diff for each color from the initial palette
 *
 * @param {Map} $palette - palette
 *
 * @requires {function} color-diff
 * 
 * @return {List} list of diffs
 */
/**
 * Initial palette used to define the diff between the base color and each color from the palette. There can be as many colors as one wants.
 * 
 * @Link https://ton.twitter.com/i/ton/data/dm/487926326314418176/487926326322823168/8M2k8xOp.png Initial color palette
 *
 * @type Map
 */
/**
 * Palette diffs
 * Same length as colors key from map-palette
 *
 * @type List
 */
/**
 * Apply differences returned from `color-diff` function to a color in order to retrieve the second color
 *
 * @param {Color} $color - color to transform
 * @param {Map} $diff - diff map
 * 
 * @return {Color} transformed color
 */
/**
 * Create a palette from a base color
 *
 * @param {Color} $base-color - base color for the palette
 *
 * @requires {function} palette-diff
 * @requires {function} apply-diff
 * @requires {variable} $base-palette
 *
 * @return {List} list of colors
 */
/**
 * Create a list of colors from the base color
 * then turn in into a map with explicit keys
 *
 * @param {Color} $base-color - base color for the palette
 *
 * @requires {function} create-palette
 *
 * @return {Map}
 */
/**
 * Create and apply a palette
 * 
 * @param {Color} $base-color - base color
 * 
 * @requires {function} create-palette
 */
.hermesite-palette {
  background: deepskyblue;
  background: linear-gradient(to right, #ceb398, #ceb398 14.28571%, #919e8d 14.28571%, #919e8d 28.57143%, #59aab6 28.57143%, #59aab6 42.85714%, deepskyblue 42.85714%, deepskyblue 57.14286%, #296b81 57.14286%, #296b81 71.42857%, #153641 71.42857%, #153641 85.71429%, #112c35 85.71429%, #112c35 100%); }

.color-lightest {
  color: #ceb398; }

.bg-lightest {
  background-color: #ceb398; }

.color-lighter {
  color: #919e8d; }

.bg-lighter {
  background-color: #919e8d; }

.color-light {
  color: #59aab6; }

.bg-light {
  background-color: #59aab6; }

.color-base {
  color: deepskyblue; }

.bg-base {
  background-color: deepskyblue; }

.color-dark {
  color: #296b81; }

.bg-dark {
  background-color: #296b81; }

.color-darker {
  color: #153641; }

.bg-darker {
  background-color: #153641; }

.color-darkest {
  color: #112c35; }

.bg-darkest {
  background-color: #112c35; }

.ratio-phi {
  position: relative; }
  .ratio-phi:before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: 168%; }
  .ratio-phi > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }

.ratio-square {
  position: relative; }
  .ratio-square:before {
    display: block;
    content: " ";
    width: 100%;
    padding-top: 100%; }
  .ratio-square > .content {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0; }

/**
 * Function defining the difference between 2 colors
 *
 * @param {Color} $a - first color
 * @param {Color} $b - second color
 *
 * @return {Map}  The color operations to do in order to find $b from $a where keys are the color functions to apply and values are the values to pass to these functions
 */
/**
 * Compute the diff for each color from the initial palette
 *
 * @param {Map} $palette - palette
 *
 * @requires {function} color-diff
 * 
 * @return {List} list of diffs
 */
/**
 * Initial palette used to define the diff between the base color and each color from the palette. There can be as many colors as one wants.
 * 
 * @Link https://ton.twitter.com/i/ton/data/dm/487926326314418176/487926326322823168/8M2k8xOp.png Initial color palette
 *
 * @type Map
 */
/**
 * Palette diffs
 * Same length as colors key from map-palette
 *
 * @type List
 */
/**
 * Apply differences returned from `color-diff` function to a color in order to retrieve the second color
 *
 * @param {Color} $color - color to transform
 * @param {Map} $diff - diff map
 * 
 * @return {Color} transformed color
 */
/**
 * Create a palette from a base color
 *
 * @param {Color} $base-color - base color for the palette
 *
 * @requires {function} palette-diff
 * @requires {function} apply-diff
 * @requires {variable} $base-palette
 *
 * @return {List} list of colors
 */
/**
 * Create a list of colors from the base color
 * then turn in into a map with explicit keys
 *
 * @param {Color} $base-color - base color for the palette
 *
 * @requires {function} create-palette
 *
 * @return {Map}
 */
/**
 * Create and apply a palette
 * 
 * @param {Color} $base-color - base color
 * 
 * @requires {function} create-palette
 */
.hermesite-palette {
  background: deepskyblue;
  background: linear-gradient(to right, #ceb398, #ceb398 14.28571%, #919e8d 14.28571%, #919e8d 28.57143%, #59aab6 28.57143%, #59aab6 42.85714%, deepskyblue 42.85714%, deepskyblue 57.14286%, #296b81 57.14286%, #296b81 71.42857%, #153641 71.42857%, #153641 85.71429%, #112c35 85.71429%, #112c35 100%); }

.color-lightest {
  color: #ceb398; }

.bg-lightest {
  background-color: #ceb398; }

.color-lighter {
  color: #919e8d; }

.bg-lighter {
  background-color: #919e8d; }

.color-light {
  color: #59aab6; }

.bg-light {
  background-color: #59aab6; }

.color-base {
  color: deepskyblue; }

.bg-base {
  background-color: deepskyblue; }

.color-dark {
  color: #296b81; }

.bg-dark {
  background-color: #296b81; }

.color-darker {
  color: #153641; }

.bg-darker {
  background-color: #153641; }

.color-darkest {
  color: #112c35; }

.bg-darkest {
  background-color: #112c35; }

.section {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0px;
  left: 0px;
  right: 0px;
  bottom: 0px;
  padding: 0px;
  margin: 0px; }
  .section.section-radial {
    background-color: rgba(200, 200, 200, 0.75); }

#covers-treemap {
  padding: 0px;
  width: 100%; }

.close-radial {
  width: 30px;
  height: 30px;
  text-align: center;
  line-height: 30px;
  position: absolute;
  z-index: 200;
  left: 50%;
  margin-left: -15px;
  top: 50%;
  margin-top: -15px;
  font-size: 30px;
  color: rgba(0, 0, 0, 0.75); }
  .close-radial:hover {
    color: black; }

html,
body {
  height: 100%; }

body {
  font-family: 'Open Sans Condensed', sans-serif;
  margin: auto;
  position: relative;
  overflow: hidden; }

circle {
  fill: none; }

form {
  position: absolute;
  right: 10px;
  top: 10px; }

.row {
  height: 100%; }

#covers-bowie {
  background-size: cover;
  background-position: 50% 50%;
  background-repeat: no-repeat;
  position: relative;
  padding: 0px;
  /*background-image: url(images/record-bg.png);*/
  /*padding: 20px;*/ }

#covers-bowie svg {
  position: relative;
  z-index: 1; }

#covers-bowie {
  text-align: center; }
  #covers-bowie svg {
    display: inline-block; }
  #covers-bowie .record {
    position: absolute;
    z-index: 0;
    top: 50%;
    left: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    border-radius: 50%;
    background-size: cover;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    border: 2px solid rgba(0, 0, 0, 0.5); }
    #covers-bowie .record:before {
      content: "";
      position: absolute;
      background-color: rgba(255, 255, 255, 0.75);
      top: 24.57627%;
      left: 24.57627%;
      width: 50.84746%;
      height: 50.84746%;
      -webkit-border-radius: 50%;
      -moz-border-radius: 50%;
      border-radius: 50%;
      border: 2px solid rgba(0, 0, 0, 0.5); }

#covers {
  background-size: cover;
  background-position: 50% 50%; }

#covers > div {
  position: relative; }

#covers > div svg {
  position: relative;
  z-index: 1; }

#covers .record {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 90%;
  margin-left: -25%;
  height: 90%;
  margin-top: -25%;
  z-index: 0; }

#covers-treemap .node {
  border: solid 1px white;
  overflow: hidden;
  position: absolute;
  background-size: cover;
  background-position: 50% 50%;
  cursor: pointer; }
  #covers-treemap .node div {
    font-size: 48px;
    text-align: center;
    font-weight: 700;
    color: rgba(255, 255, 255, 0.75);
    text-shadow: 1px 0px 0px rgba(0, 0, 0, 0.1), -1px 0px 0px rgba(0, 0, 0, 0.1), 0px 1px 0px rgba(0, 0, 0, 0.1), 0px -1px 0px rgba(0, 0, 0, 0.1); }
  #covers-treemap .node:hover div {
    background-color: #fff;
    color: #000;
    height: 100%; }

.node text {
  font-weight: 600; }
  .node text.record {
    font-size: 11px;
    cursor: default; }
  .node text.artist {
    cursor: pointer;
    font-size: 9px;
    opacity: .5; }
    .node text.artist:hover {
      opacity: 1;
      font-size: 11px; }

.no-link {
  fill: none; }

.link {
  fill: none;
  stroke-width: 1px; }

#right-container {
  display: none; }

#center-container {
  width: 800px; }

#infovis {
  width: 800px; }

.node {
  color: #fff;
  font-size: 9px;
  overflow: hidden; }

/*TOOLTIPS*/
.tip {
  color: #fff;
  width: 139px;
  background-color: black;
  opacity: 0.9;
  filter: alpha(opacity=90);
  font-size: 10px;
  font-family: Verdana, Geneva, Arial, Helvetica, sans-serif;
  padding: 7px; }

.album {
  width: 100px;
  margin: 3px; }

#id-list {
  background-color: #EEEEEE;
  border: 1px solid #CCCCCC;
  margin: 10px 20px 0 20px;
  padding: 5px;
  text-align: left;
  text-indent: 2px; }

#id-list table {
  margin-top: 2px; }

#back {
  margin: 10px 40px; }

.button {
  display: inline-block;
  outline: none;
  cursor: pointer;
  text-align: center;
  text-decoration: none;
  font: 14px / 100% Arial, Helvetica, sans-serif;
  padding: 0.5em 1em 0.55em;
  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);
  -webkit-border-radius: 0.5em;
  -moz-border-radius: 0.5em;
  border-radius: 0.5em;
  -webkit-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2); }

.button:hover {
  text-decoration: none; }

.button:active {
  position: relative;
  top: 1px; }

/*# sourceMappingURL=bowie-viz.css.map */
